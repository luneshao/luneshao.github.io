<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Javascrip on luneS&#39;s garden</title>
    <link>https://luneshao.github.io/tags/javascrip/</link>
    <description>Recent content in Javascrip on luneS&#39;s garden</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 27 May 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://luneshao.github.io/tags/javascrip/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>=8 js 拓展</title>
      <link>https://luneshao.github.io/posts/js-expland/</link>
      <pubDate>Mon, 27 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://luneshao.github.io/posts/js-expland/</guid>
      <description>1.Array 1.1 将类数组转化为数组  Array.prototype.slice.call() 方法：  MDN slice相关
slice 方法可以用来将一个类数组（Array-like）对象/集合转换成一个新数组。你只需将该方法绑定到这个对象上。
Array.slice(start, end) 方法用来截取数组 start 到 end （不包含 end）值，并返回一个新数组。
function list () { return Array.property.slice.call(arguments) } list(1, 2, 3)  除此以外可以使用 [].splice.call(arguments) 代替，也可以使用 bind 来简化过程。
const unboundSlice = Array.property.slice const slice = Function.property.bind.call(unboundSlice) function list () { return slice(arguments) } list(1, 2, 3)   Array.from 方法  MDN Array.from
Array.from() 方法从一个类似数组或可迭代对象中创建一个新的数组实例。</description>
    </item>
    
  </channel>
</rss>