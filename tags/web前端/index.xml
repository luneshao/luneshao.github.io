<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web前端 on lune&#39;s garden</title>
    <link>https://luneshao.github.io/tags/web%E5%89%8D%E7%AB%AF/</link>
    <description>Recent content in web前端 on lune&#39;s garden</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 20 May 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://luneshao.github.io/tags/web%E5%89%8D%E7%AB%AF/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>vue 优化</title>
      <link>https://luneshao.github.io/2020/2020-05-20-vue-perf/</link>
      <pubDate>Wed, 20 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://luneshao.github.io/2020/2020-05-20-vue-perf/</guid>
      <description>1、字体包压缩 使用 fontmin 这个库压缩字体包。（字体下载地址 字体下载网 ，这个下载的苹方简-常规可以被格式化。）
2、图片使用懒加载 使用 vue-lazyload 库优化图片加载，滚动到某处再加载图片。
3、打包线上版本，使用cdn引入包 // -------------- // .env // -------------- NODE_ENV === &#39;production&#39; // -------------- // vue.config.js // -------------- const isProd = process.env.NODE_ENV === &#39;production&#39; const assetsCDN = { // webpack build externals externals: { vue: &#39;Vue&#39;, &#39;vue-router&#39;: &#39;VueRouter&#39;, &#39;vue-lazyload&#39;: &#39;VueLazyload&#39;, }, css: [&#39;//cdn.jsdelivr.net/npm/animate.css@3.7.2/animate.min.css&#39;], // https://unpkg.com/browse/vue@2.6.10/ js: [ &#39;//cdn.jsdelivr.net/npm/vue@2.6.11/dist/vue.min.js&#39;, &#39;//cdn.jsdelivr.net/npm/vue-router@3.1.6/dist/vue-router.min.js&#39;, &#39;//cdn.jsdelivr.net/npm/vue-lazyload@1.3.3/vue-lazyload.min.js&#39;, ] } module.exports = { configureWebpack: config =&amp;gt; { if (isProd) { return { resolve: { alias: { &#39;@ant-design/icons/lib/dist$&#39;: resolve(&#39;.</description>
    </item>
    
    <item>
      <title>=8 浏览器易混淆名词整理</title>
      <link>https://luneshao.github.io/2019/browser-num/</link>
      <pubDate>Mon, 13 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://luneshao.github.io/2019/browser-num/</guid>
      <description> 1.JS 的 window.location 对象 包含有关文档及当前位置的信息。
MDN文档地址
 location.origin: 包含页面来源的域名的标准形式，当前页面的域名 + 端口。 eg: https://www.baidu.com
 location.host: 当前页面的域名，可能最后带有一个“：”和端口。 eg: www.baidu.com
 location.hostname: 当前页面的域名。 eg: www.baidu.com
 location.protocol: 当前页面的协议。 eg: https
 location.assign(): 加载给定 URL 的内容到这个 Location对象所关联的对象上。
 location.reload(params): 重新加载当前页。params: t/f =&amp;gt; 服务器请求资源/缓存。
 location.replace(): 用给定的URL替换当前的资源，不会被保存历史。
  2.ajax 请求头中的属性 MDN文档地址
 Host: 服务器的域名（对于虚拟主机来说），以及（可选的）服务器监听的TCP端口号。 相关文章一个IP可以部署众多网站，分别解析不同的域名，host 指示访问哪个虚拟主机。
 Origin: 请求来自于哪个站点，该字段仅指示服务器名称，并不包含任何路径信息。
 Referer: 当前请求页面的来源页面的地址。B -&amp;gt; A, Referer: B.URL
  </description>
    </item>
    
    <item>
      <title>markdown 常用语法</title>
      <link>https://luneshao.github.io/2019/markdown/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://luneshao.github.io/2019/markdown/</guid>
      <description>列表 // 无序列表 * txt txt txt + txt txt txt - txt txt txt // 有序列表 1. txt txt txt 2. txt txt txt  引用 &amp;gt; txt txt txt  粗体 和 斜体 // 粗体 **txt** / __txt__ // 斜体 *txt* / _txt_  表格 | thead | thead | thead | | :---- | :---: | ----: | | 左对齐 | 居中 | 右对齐 |  分隔线 *** / - - - / * * *  图片 !</description>
    </item>
    
    <item>
      <title>前端属性兼容性整理</title>
      <link>https://luneshao.github.io/2019/comp/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://luneshao.github.io/2019/comp/</guid>
      <description>1.document 相关 1.1 addEventListen
兼容写法：
function addEvt(eTarget, eType, eHandle) { if (eTarget.addEventListen) { eTarget.addEventListen(eType, eHandle) } else { // ie 浏览器 if (eTarget.attachEvent) { eType = &#39;on&#39; + eType eTarget.attachEvent(eType, eHandle) } else { eventTarget[&#39;on&#39; + eventType] = eventHandler } } }  1.2 scrollTop()
兼容写法：
// 因为 0 || undefine =&amp;gt; undefined const st = document.pageYOffset.scrollTop || document.documentElement.scrollTop || document.body.scrollTop || 0  // ie6/7/8 1. 没有 doctype 声明的页面： const st = document.</description>
    </item>
    
  </channel>
</rss>